#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
    vector<int> ans;
     if(root==NULL)
            return ans;
    queue<BinaryTreeNode<int>*> q;
    q.push(root);
    int c = 0;
    while(!q.empty())
    {
        c++;
        vector<int> v;
        int size = q.size();
        for(int i=0;i<size;i++)
        {
            BinaryTreeNode<int>* temp = q.front();
            q.pop();

            if(temp->left)
            {
                q.push(temp->left);
            }
            if(temp->right)
            {
                q.push(temp->right);
            }

            v.push_back(temp->data);
        }

        if(c%2 == 0)
        {
            reverse(v.begin(),v.end());
        }

        for(auto x : v)
        {
            ans.push_back(x);
        }
    }

    return ans;
}
