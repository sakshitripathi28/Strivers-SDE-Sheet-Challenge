#include<bits/stdc++.h>
void solve(vector<int> arr, int index, int sum,int target,vector<int> output,vector<vector<int>> &ans)
{
	if(sum == target)
	{
		ans.push_back(output);
		return;
	}
	
	if(sum > target) return;
	if(index == arr.size()) return;

	//include
	int ele = arr[index];
	output.push_back(ele);
	sum = sum + ele;
	solve(arr, index+1, sum, target,output,ans);
	sum = sum - arr[index];
	output.pop_back();

	//exclude
	while(index+1 < arr.size() && arr[index +1] == arr[index]) index++;
	solve(arr,index+1,sum,target,output,ans);
}
vector<vector<int>> combinationSum2(vector<int> &arr, int n, int target){
	// Write your code here.
	vector<vector<int>> ans;
	vector<int> output;

	sort(arr.begin(),arr.end());
	int index = 0;
	int sum = 0;
	solve(arr,index,sum,target,output,ans);
	return ans;
}
