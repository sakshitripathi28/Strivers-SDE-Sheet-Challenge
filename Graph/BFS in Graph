#include <bits/stdc++.h> 

void createAdj(unordered_map<int,set<int>> &adj,vector<pair<int, int>> &edges)
{
    for(int i=0;i<edges.size();i++)
    {
        int u = edges[i].first;
        int v = edges[i].second;

        adj[u].insert(v);
        adj[v].insert(u);
    }
}
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    // Write your code here

    unordered_map<int,set<int>> adj;
    vector<int> ans;
    createAdj(adj,edges);
    int visit[vertex] = {0};
    

        
    for(int i=0;i<vertex;i++){
        if(!visit[i]){
            visit[i] = 1;
            queue<int> q;
            q.push(i);

            while(!q.empty())
            {
                int node = q.front();
                q.pop();

                ans.push_back(node);
                
                
                for(auto j : adj[node])
                {
                    if(!visit[j])
                    {
                        visit[j] = 1;
                        q.push(j);
                    }
                }
            }

        }
    }
    

    return ans;



}
