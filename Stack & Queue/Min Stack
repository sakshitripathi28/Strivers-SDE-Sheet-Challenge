#include <bits/stdc++.h> 
// Implement class for minStack.
class minStack
{
	// Write your code here.
	stack<long long> st;
	long long mini = INT_MAX;
	public:
		
		// Constructor
		minStack() 
		{ 
			// Write your code here.
		}
		
		// Function to add another element equal to num at the top of stack.
		void push(int num)
		{
			// Write your code here.
			if(st.empty())
			{
				st.push(num);
				mini = num;
			}
			else
			{
				if(num < mini)
				{
					st.push(2*num-mini);
					mini = num;
				}
				else
				{
					st.push(num);
				}
			}
		}
		
		// Function to remove the top element of the stack.
		int pop()
		{
			// Write your code here.
			
			if(!st.empty())
			{
				if(st.top() < mini)
				{
					int ans = mini;
					mini = 2*mini - st.top();
					st.pop();
					return ans;

				}
				else
				{
					int ans = st.top();
					st.pop();
					return ans;
				}
			}
			else
				return -1;
		}
		
		// Function to return the top element of stack if it is present. Otherwise return -1.
		int top()
		{
			// Write your code here.
			if(st.empty()) return -1;

			if(st.top() < mini)
				{
	
					return mini;
				}
				else
				{
					return st.top();
				}
		}
		
		// Function to return minimum element of stack if it is present. Otherwise return -1.
		int getMin()
		{
			// Write your code here.
			if(!st.empty())
				return mini;
			else
				return -1;
		}
};
