#include <bits/stdc++.h> 
class Queue {
public:
    int frnt,rear,size;
    int *arr;
    Queue() {
        // Implement the Constructor
        frnt = 0;
        rear = 0;
        size = 100001;
        arr = new int[size];
    }

    /*----------------- Public Functions of Queue -----------------*/

    bool isEmpty() {
        // Implement the isEmpty() function
        if(frnt == rear)
            return true;
        else
            return false;
    }

    void enqueue(int data) {
        // Implement the enqueue() function
        if(rear != size-1)
        {
            arr[rear] = data;
            rear++;
        }
        else
        {
            return;
        }
    }

    int dequeue() {
        // Implement the dequeue() function
        int ans;
        if(isEmpty())
        {
            return -1;
        }
        else
        {
            ans = arr[frnt];
            frnt++;
            if(frnt == rear)
            {
                frnt = 0;
                rear = 0;
            }
        }
        return ans;
    }

    int front() {
        // Implement the front() function
        int ans;
        if(isEmpty())
        {
            return -1;
        }
        else
        {
            ans = arr[frnt];
        }
        return ans;
    }
};
